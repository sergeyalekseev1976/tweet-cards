{"version":3,"file":"static/js/709.f7350504.chunk.js","mappings":"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","sources":["redux/selectors.js","components/TweetCard/TweetCard.styled.jsx","components/TweetCard/TweetCard.jsx","components/TweetCardList/TweetCardList.styled.jsx","components/TweetCardList/TweetCardList.jsx","components/BackBtn/BackBtn.styled.jsx","components/BackBtn/BackBtn.jsx","components/FilterStatus/FilterStatus.styled.jsx","components/FilterStatus/FilterStatus.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/TweetsPage/TweetsPage.styled.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\nimport { status } from \"./constants\";\n\nexport const selectUsers = (state) => state.users.items;\n\nexport const selectIsLoading = (state) => state.users.isLoading;\n\nexport const selectError = (state) => state.users.error;\n\nexport const selectFilterStatus = (state) => state.filter.status;\n\nexport const selectVisibleUsers = createSelector(\n  [selectUsers, selectFilterStatus],\n  (users, statusFilter) => {\n    switch (statusFilter) {\n      case status.follow:\n        return users.filter((user) => !user.follow);\n      case status.followings:\n        return users.filter((user) => user.follow);\n      default:\n        return users;\n    }\n  }\n);\n","import styled from \"styled-components\";\n\nexport const Background = styled.img`\n  width: 308px;\n  height: 168px;\n  margin-bottom: 88px;\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  width: 76px;\n  height: 22px;\n  z-index: 9999;\n`;\n\nexport const CardWrapper = styled.div`\n  position: absolute;\n  top: 214px;\n  left: 0;\n  width: 100%;\n  height: 8px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const UserAvatarWrapper = styled.div`\n  position: absolute;\n  left: calc(50% - 40px);\n  top: 174px;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  border: 8px solid #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const UserAvatar = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n  scale: 1;\n  transition: scale 0.3s ease-in-out;\n\n  &:hover {\n    scale: 1.5;\n  }\n`;\n\nexport const Tweet = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: #ebd8ff;\n  margin-bottom: 16px;\n`;\n\nexport const Follower = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: #ebd8ff;\n  margin-bottom: 26px;\n`;\n\nexport const Btn = styled.button`\n  min-width: 196px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  border: none;\n  color: #373737;\n  background-color: ${({ follow }) => (follow ? \"#5cd3a8\" : \"#ebd8ff\")};\n  padding: 14px 28px;\n  border-radius: 10px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #5cd3a8;\n  }\n`;\n","import { useDispatch } from \"react-redux\";\nimport { toggleFollow } from \"../../redux/operations\";\nimport logo from \"../../images/logo.png\";\nimport bg from \"../../images/bg.png\";\nimport {\n  Background,\n  Logo,\n  CardWrapper,\n  UserAvatarWrapper,\n  UserAvatar,\n  Tweet,\n  Follower,\n  Btn,\n} from \"./TweetCard.styled\";\n\nconst TweetCard = ({\n  user: { id, user, tweets, followers, avatar, follow },\n}) => {\n  const dispatch = useDispatch();\n\n  const handleFollowToggle = () => {\n    dispatch(toggleFollow(id));\n  };\n\n  return (\n    <>\n      <Background src={bg} alt=\"avatar\" />\n      <Logo src={logo} alt=\"Logo\" />\n      <CardWrapper />\n      <UserAvatarWrapper>\n        <UserAvatar src={avatar} alt={`Avatar of ${user.name}`} />\n      </UserAvatarWrapper>\n      <Tweet>{`${tweets.toLocaleString(\"en-US\")} tweets`}</Tweet>\n      <Follower>{`${(followers + 100000).toLocaleString(\n        \"en-US\"\n      )} followers`}</Follower>\n      <Btn follow={follow} onClick={handleFollowToggle}>\n        {follow ? \"Following\" : \"Follow\"}\n      </Btn>\n    </>\n  );\n};\n\nexport default TweetCard;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-items: center;\n  max-width: 1200px;\n  gap: 30px;\n  margin: 0 auto;\n `;\n\nexport const Card = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 28px 36px 36px;\n  max-width: 380px;\n  min-width: 0;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n`;\n","import TweetCard from \"../TweetCard/TweetCard\";\nimport { List, Card } from \"./TweetCardList.styled\";\n\nconst TweetCardList = ({ users }) => {\n  return (\n    <>\n      <List>\n        {users.map((user) => (\n          <Card key={user.id}>\n            <TweetCard user={user} />\n          </Card>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default TweetCardList;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  margin-left: 15px;\n  margin-bottom: 15px;\n  gap: 10px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: #5cd3a8;\n  }\n`;\n","import { HiArrowLeft } from \"react-icons/hi\";\nimport { StyledLink } from \"./BackBtn.styled\";\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from \"styled-components\";\n\nexport const Title = styled.p``;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const FilterBtn = styled.button`\n  min-width: 100px;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 22px;\n  border: none;\n  color: #373737;\n  background-color: ${(props) => (props.selected ? \"#5cd3a8\" : \"#ebd8ff\")};\n  padding: 10px 20px;\n  border-radius: 10px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #5cd3a8;\n  }\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Wrapper, FilterBtn } from \"./FilterStatus.styled\";\nimport { status } from \"../../redux/constants\";\nimport { selectFilterStatus } from \"../../redux/selectors\";\nimport { setFilterStatus } from \"../../redux/filterSlice\";\n\nconst FilterStatus = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterStatus);\n\n  const handleFilterChange = (filter) => dispatch(setFilterStatus(filter));\n\n  return (\n    <>\n      <Wrapper>\n        <FilterBtn\n          selected={filter === status.all}\n          onClick={() => handleFilterChange(status.all)}\n        >\n          show all\n        </FilterBtn>\n        <FilterBtn\n          selected={filter === status.follow}\n          onClick={() => handleFilterChange(status.follow)}\n        >\n          follow\n        </FilterBtn>\n        <FilterBtn\n          selected={filter === status.followings}\n          onClick={() => handleFilterChange(status.followings)}\n        >\n          followings\n        </FilterBtn>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default FilterStatus;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;","import { Circles } from 'react-loader-spinner';\nimport { Wrapper } from './Loader.styled';\n\nexport function Loader() {\n  return (\n    <Wrapper>\n      <Circles\n      height=\"80\"\n      width=\"80\"\n      color=\"red\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  </Wrapper>\n    \n  );\n}","import styled from \"styled-components\";\n\n\nexport const LoadMoreBtn = styled.button`\n  width: 100%;\n  margin: 20px 0;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  border: none;\n  color: #373737;\n  background-color: ${({ follow }) => (follow ? \"#5cd3a8\" : \"#ebd8ff\")};\n  padding: 14px 28px;\n  border-radius: 10px;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #5cd3a8;\n  }\n`;","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { fetchUsers } from \"../../redux/operations\";\nimport {\n  selectVisibleUsers,\n  selectError,\n  selectIsLoading,\n} from \"../../redux/selectors\";\nimport  TweetCardList  from \"../../components/TweetCardList/TweetCardList\";\nimport  BackBtn  from \"../../components/BackBtn/BackBtn\";\nimport  FilterStatus  from \"../../components/FilterStatus/FilterStatus\";\nimport  { Loader }  from \"../../components/Loader/Loader\";\nimport { LoadMoreBtn } from \"./TweetsPage.styled\";\n// Loader, FilterStatus, BackBtn\n\n\nconst TweetsPage = () => {\n  const [visible, setVisible] = useState(3);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const users = useSelector(selectVisibleUsers);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  const showMoreItems = () => {\n    setVisible((prevValue) => prevValue + 3);\n  };\n\n  return (\n    <>\n      <BackBtn to={backLinkHref}>Go back</BackBtn>\n      <FilterStatus />\n      <TweetCardList users={users.slice(0, visible)} />\n      {isLoading && !error && <Loader />}\n      {visible < users.length && (\n        <LoadMoreBtn onClick={showMoreItems}>Load more</LoadMoreBtn>\n      )}\n    </>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["selectIsLoading","state","users","isLoading","selectError","error","selectFilterStatus","filter","status","selectVisibleUsers","createSelector","items","statusFilter","user","follow","Background","styled","Logo","CardWrapper","UserAvatarWrapper","UserAvatar","Tweet","Follower","Btn","id","tweets","followers","avatar","dispatch","useDispatch","src","bg","alt","name","toLocaleString","onClick","toggleFollow","List","Card","map","StyledLink","Link","to","children","size","Wrapper","FilterBtn","props","selected","useSelector","handleFilterChange","setFilterStatus","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","LoadMoreBtn","useState","setVisible","backLinkHref","useLocation","from","useEffect","fetchUsers","BackBtn","slice","length","prevValue"],"sourceRoot":""}